@{
    if (Request.Headers["X-PJAX"] != null)
    {
        Layout = null;
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
}
<div id="boardContent">
    <div>
        <input type="hidden" id="hidden_category"value="0">
        <table class="titleGrid">
            <tr>
                <th></th>
                <td> 
                    <div style="display : flex;">
                        <div id="radio0" class="category" name="Category" value="0">공지사항</div>
                        <div id="radio1" class="category" name="Category" value="1">교육자료</div>
                        <div id="radio2" class="category" name="Category" value="2">Q&A</div>
                    </div>
                </td>
            </tr>
            <tr>
                <!--xml 에서 조건이 걸려야 select제대로 해옴.-->
                <th>제목</th>
                <td><input type="text" id="txtBbsTitle" style="width:100%"></td>
               
            </tr>
            <tr>
                <th>첨부파일</th>
                <td>
                    <form id="frmLocalfile" action="/file-upload" class="dropzone" style="height:50px;"></form>
                </td>

            </tr>
            <tr>
                <th>내용</th>
                <td style="width:100%;">
                    <textarea id="editor"></textarea>
                </td>
            </tr>
        </table>
        <div id="btns" style=" display:flex; margin-left:10px;">
            <button id="btnBbsAdd" onclick="GetBoardData()" style="margin-right:10px;"> 저장</button>
            <button id="btnAddCancel"> 취소</button>
        </div>
    </div>
</div>

<script type="text/javascript">
    var bbsFileSource =
    {
        datatype: "json",
        datafields: [
            { name: 'bbs_file_idx' },
            { name: 'bbs_idx' },
            { name: 'is_itf_nm'},
            { name: 'file_org_nm' },
            { name: 'file_conv_nm' },
        ],     
        id: 'bbs_file_idx',
        localdata: null
    };

     //게시판은 첨부파일 없이도 저장되야함. 
    var oDropzone = null;

    Dropzone.options.frmLocalfile = {
        url : '@Url.Action("setBbsFileUpload", "Bbs")', //class="dropzone->가면 action="/file-upload"로 해놓은걸 url로 바꿔침
        //params : { "bbs_idx ": $("bbs_idx").val() },

        addRemoveLinks: false,//업로드 취소 및 추가삭제 미리보기 그림 링크 기본 안 추가

        autoProcessQueue: false, //자동업로드 끄기
        paralleChunkUploads : true, //병렬처리 -webconfig수정을 왜 같이 해줘야하는거지?
        uploadMultiple : true, //여러개 가능?

        parallelUploads: 20, //20개까지
        maxFiles : 20,
        maxFilesize: 2048,
        method: 'post',
            
        init: function() { //초기동작initial
            oDropzone = this;

            var BbsAdd = document.querySelector('#btnBbsAdd');
            BbsAdd.addEventListener("click", function () {
                //if (oDropzone.files.length === 0) {
                //    alert("하단에 업로드 될 파일을 등록해주세요.");
                //    return;
                //}
                oDropzone.options.params.bbs_title = $("#txtBbsTitle").val();
                oDropzone.options.params.bbt_contet =  $('#editor').val();
                oDropzone.options.params.file_org_nm = $('.filename').val();
                oDropzone.processQueue();
            });

            this.on("complete", function (data) {//업로드가 됐을때
                if (this.getUploadingFiles().legth === 0 && this.getQueeudFiles().length === 0) {
                    //xhr = xmlHttpRequest : 비동기식 전송
                    if (data.xhr != undefined) {//xhr 제대로 값왔을때
                        var res = eval('(' + data.xhr.reponseText + ')'); //reponseText = ?
                        if (res.isError) {
                            alert(res.resultMessge);
                            console.log(res.resultDescription);
                            return false;
                        }
                        GetBoardData()
                        this.removeAllFiles(true);
                           
                    }
                }
            });
        }
    }

    $(document).ready(function () {

        $('#btnAddCancel').click(function () {
            location.href = "/Bbs/BoardList";
        });

        $(".category").jqxRadioButton ({ width: 120, height: 25 });
        
        $('#editor').jqxEditor({
            height: "400px",
            width: "100%",
            tools: 'bold italic underline | left center right'
        });

       
    });

    function GetBoardData() {

        var printBbs = function (res) {//controller에서 무엇을 리턴받는가 res= return
           
            location.href = "/Bbs/BoardView?bbs_idx="+res; //res= 리턴값 bbsIDX
        }
      
        var param = {};
       
        param.bbs_category = $('#hidden_category').val();
        //param.bbs_category = $('div[name = "category"]: checked').val();

        param.bbs_title = $('#txtBbsTitle').val();
        param.bbs_content = $('#editor').val();
        param.file_org_nm = $('.filename').val();


        GetCommData("/Bbs/SetBoardContents", param, printBbs);
        
    }
    

</script>

 