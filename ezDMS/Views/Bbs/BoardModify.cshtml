@{
    if (Request.Headers["X-PJAX"] != null)
    {
        Layout = null;
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
}

<style type="text/css">
.dropzone .dz-preview .dz-image {
    width: 124px !important;
    height: 84px !important;
}

 .dz-preview.dz-file-preview .dz-details .dz-size {
     display:none;
     font-size:12px;
 }
.dropzone .dz-message {
    margin-top :45px;
}

</style>


<div id="boardContent">
    <div id="btns" style="display : flex; margin-left:10px;">
        <button id="btnGoList" style="margin-bottom:5px;">@Resources.Resource.res0409@*목록으로*@</button>
    </div>
    <input type="hidden" id="hid_bbs_category" value="@ViewBag.bbsContentsModel.bbs_category" />
    <input type="hidden" id="hid_bbs_idx" value="@ViewBag.bbsContentsModel.bbs_idx" />
    <table class="titleGrid">
        <tr>
            <th>@Resources.Resource.res0434@*분류*@</th>
            <td>
                <div>
                    <div id="cbBbsCg"></div>
                </div>
            </td>
        </tr>
        <tr>
            <th>@Resources.Resource.res0037@*제목*@</th>
            <td><input type="text" id="txtBbsTitle" style="width:100%" value="@ViewBag.bbsContentsModel.bbs_title" /></td>
            @*<th>작성자</th>
                <td>@ViewBag.bbsContentsModel.create_us_nm</td>*@
            @*<th>작성일</th>
                <td>@ViewBag.bbsContentsModel.create_dt</td>*@
        </tr>
        <tr>
            <th>@Resources.Resource.res0513@*첨부파일*@</th>
            <td>
                <form id="frmLocalfile" action="/file-upload" class="dropzone" style="height:50px;"></form>
            </td>
        </tr>
        <tr>
            <th>@Resources.Resource.res0390@*내용*@</th>
            <td style="width:100%;">
                <textarea id="editor">  @Html.Raw(ViewBag.bbsContentsModel.bbs_content)</textarea>
            </td>
        </tr>
    </table>

    <div id="btns" style="display:flex; margin-left:10px;">
        <button id="btnBbsModi" style="margin-bottom:5px; margin-right:10px;">@Resources.Resource.res0491@*완료*@</button>
    </div>
</div>


<script type="text/javascript">
    $("#lbLocation").text("@Resources.Resource.res0003 - @Resources.Resource.res0004");//게시판 - 게시글 수정
    var bbsSource =
    {
        datatype: "json",
        datafields: [
            { name: 'bbs_idx' },
            { name: 'bbs_category' },
            { name: 'bbs_title' },
            { name: 'bbs_content' },
            { name: 'create_us_nm' },
            { name: 'create_datetime' },
        ],
        id: 'bbs_idx',
        localdata: null
    };

    var bbsFileSource =
    {
        datatype: "json",
        datafields: [
            { name: 'bbs_file_idx' },
            { name: 'bbs_idx' },
            { name: 'file_org_nm' },
            { name: 'file_conv_nm' },
        ],
        id: 'bbs_file_idx',
        localdata: null
    };

    $(document).ready(function () {

        //콤보 : db조회해서 가져온, 사용할 값
        //Combining the HTML data attribute with the combination Html.Raw(JSon.Encode(object)) methods facilitates the injection of server side data into the document object model.
        var CgData = ConvComboData(@Html.Raw(Json.Encode(ViewBag.BbsCategory)), "idx", "code_value", false);
        //콤보박스 설정
        $("#cbBbsCg").jqxComboBox({ selectedIndex: 0, source: CgData, displayMember: "text", valueMember: "value", width: 150, height: 26, });
        $("#cbBbsCg").jqxComboBox('val', $("#hid_bbs_category").val());
        $('#btnGoList').click(function () {
            location.href = "/Bbs/BoardList";
        });

        $('#editor').jqxEditor({
            height: "400px",
            width: "100%",
            tools: 'bold italic underline | left center right'
        });

    });

    var oDropzone = null;

        Dropzone.options.frmLocalfile = {
            url: '@Url.Action("SetBoardContents", "Bbs")',
            params: {"bbs_idx": $('#hid_bbs_idx').val(), "bbs_category" : $("#cbBbsCg").val(), "bbs_title" :  $("#txtBbsTitle").val() , "bbs_content":  $("#editor").val()}, 
            addRemoveLinks: true,

            autoProcessQueue: false,
            paralleChunkUploads: true,
            uploadMultiple: true,
            thumbnailWidth: 50,
            thumbnailHeight:50,
            parallelUploads: 20,
            maxFiles: 20,
            maxFilesize: 2048,
            method: 'post',
            createImageThumbnails: false,

            init: function () { //초기동작initial
                oDropzone = this;

                var fileList = @Html.Raw(Json.Encode(ViewBag.bbsFileModel));

                var mockFile = {};
               
               
                var BbsModify = document.querySelector('#btnBbsModi');

                BbsModify.addEventListener("click", function () {
                    if (oDropzone.getQueuedFiles().length == 0) {
                        oDropzone._uploadData([{ upload: { filename: '' } }], [{ filename: '', name: '', data: new Blob() }]);
                    }
                    console.log("SEND : " + oDropzone.getQueuedFiles().length);
;
                    oDropzone.processQueue();
                     //완료후 location.href = "/Bbs/BoardView?bbs_idx="+item.bbs_idx;
                });

                if (fileList.length > 0)
                {
                    console.log("PREV : " + oDropzone.getQueuedFiles());
                    fileList.forEach(function (item) {
                         var blob = new Blob()
                        var file = new File([blob], item.file_org_nm, {
                            name: item.file_org_nm,
                            file_idx: item.bbs_file_idx
                        });
                       
                        //mockFile = {
                        //    name: item.file_org_nm,
                        //    file_idx: item.bbs_file_idx,
                        //    status : "queued", 
                        //    size: 123456,                            
                        //}
                        //oDropzone.options.addedfile.call(oDropzone, mockFile);  
                        oDropzone.addFile(file);  
                        
                        //oDropzone.files.push(mockFile);
                        //oDropzone.emit("addedfile", mockFile);  
                        oDropzone.emit("complete", file);  
                        //oDropzone.emit("addFile", mockFile);                
                        //oDropzone.files.push(mockFile);
                    });

                    console.log("AFTER : " + oDropzone.getQueuedFiles().length);
                    
                }

                this.on("sending", function (file, xhr, formData) {
                 
                    //formData.append("category", $("div [name='category'] : checked").val() );
                    formData.append("bbs_idx", $('#hid_bbs_idx').val());
                    formData.append("bbs_category", $("#cbBbsCg").val());
                    formData.append("bbs_title", $("#txtBbsTitle").val());
                    formData.append("bbs_content", $("#editor").val());

                    console.log(formData);
                });

                
                this.on("removedfile", function (file) {
                    console.log(file);
                     //Only files that have been programmatically added should
                     //have a url property.

                    if (file.url && file.url.trim().length > 0) {
                        $("<input type='hidden'>").attr({
                            id: 'DeletedImageUrls',
                            name: 'DeletedImageUrls'
                        }).val(file.url).appendTo('#image-form');
                    }
                    

                });

                this.on("complete", function (data) {
                    if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
                        if (data.xhr != undefined) {
                            if (data.isError) {
                                alert(data.resultMessage);
                                console.log(data.resultDescription);
                                return false;
                            }
                            this.removeAllFiles(true);

                            var IDX = eval("(" + data.xhr.responseText + ")");
                            location.href = "/Bbs/BoardView?bbs_idx=" + IDX;
                        }
                    }
                });
                
                
            }
        }

    
    //function BbsModify() {
    //    var printBbs = function (res) {
    //        location.href = "/Bbs/BoardView?bbs_idx=" + res.bbs_idx;
    //       
    //    }

    //    param = {};

    //    param.bbs_category = $('#hid_bbs_category').val();
    //    param.bbs_idx = $('#hid_bbs_idx').val();
    //    param.bbs_title = $('#txtBbsTitle').val();
    //    param.bbs_content = $("#editor").val();

    //    GetCommData("/Bbs/SetBoardContents", param, printBbs);
    //}
</script>
