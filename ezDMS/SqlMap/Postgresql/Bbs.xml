<?xml version="1.0" encoding="utf-8" ?>
<sqlMap
  namespace="Bbs"
	xmlns="http://ibatis.apache.org/mapping"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <alias>
    <typeAlias alias="bbsContents" type="ezDMS.Models.Bbs.BbsContentsModel" />
    <typeAlias alias="bbsReply" type="ezDMS.Models.Bbs.BbsReplyModel" />
    <typeAlias alias="bbsFile" type="ezDMS.Models.Bbs.BbsFileModel" />
  </alias>
  
  <statements>
    <insert id="insBbsContent" resultClass="bbsContents">
    <!--없는 값을 만들때 쓰는 selectKey-->
      <selectKey type="pre" resultClass="int" Property="bbs_idx">
        SELECT COALESCE(MAX(bbs_idx) + 1, 1) AS bbs_idx FROM Bbs_contents
      </selectKey>
      
      INSERT INTO Bbs_contents (bbs_idx, bbs_category, bbs_title, bbs_content, create_us, create_dt)
      VALUES (#bbs_idx#, #bbs_category#, #bbs_title#, #bbs_content#, #create_us#, now())
    </insert>

    <delete id="delBbsContent" parameterClass="bbsContents">
      DELETE  FROM Bbs_contents where bbs_idx = #bbs_idx#
    </delete>

    <update id="udtBbsContent" parameterClass="bbsContents">
      UPDATE Bbs_contents SET  bbs_category = #bbs_category#, bbs_title = #bbs_title#, bbs_content =  #bbs_content#, create_dt = now()
      where bbs_idx = #bbs_idx#
    </update>
    
    <!--제목 옆에 댓글MAX값 붙일래 count 사용해서 -->
    <select id="selBbsContent"  parameterClass="bbsContents" resultClass="bbsContents">
      SELECT
      A.bbs_idx
      , case when A.bbs_category notnull then rs.kor_nm else rs.kor_nm  end as bbs_category_kor_nm
      , case when A.bbs_category notnull then rs.eng_nm else rs.eng_nm  end as bbs_category_eng_nm
      , case when A.bbs_category notnull then rs.chn_nm else rs.chn_nm  end as bbs_category_chn_nm
      , case when A.bbs_category notnull then rs.etc1_nm else rs.etc1_nm  end as bbs_category_etc1_nm
      , case when A.bbs_category notnull then rs.etc2_nm else rs.etc2_nm  end as bbs_category_etc2_nm
      , A.bbs_title
      , A.bbs_content
      , A.create_dt
      , A.create_us
      , B.us_nm as create_us_nm
      , B.us_role
      , coalesce(reply_cnt, 0) as reply_cnt 
      , coalesce(L.bbs_read_cnt,0) as bbs_read_cnt 
      FROM Bbs_contents A
      LEFT JOIN sys_users B ON A.create_us = B.us_idx
      LEFT JOIN (select bbs_idx, count(bbs_reply_idx) as reply_cnt from Bbs_reply group by bbs_idx ) C on A.bbs_idx = C.bbs_idx
      LEFT JOIN (select action_target_idx, count(*) as bbs_read_cnt from log_action_history where action_module = 30 and action_type = 140 group by action_target_idx) L on A.bbs_idx = L.action_target_idx
      LEFT JOIN v_sys_library rs on A.bbs_category = rs.idx  :: text 
      <dynamic prepend="where">
        <!-- bbs_idx가 널이 아닐경우 아래 조건을 실행한다.-->
        <isNotNull prepend="and" property="bbs_idx">
          A.bbs_idx = #bbs_idx#
        </isNotNull>
        
        <isNotNull prepend="and" property="bbs_title">
          UPPER(A.bbs_title) LIKE '%'|| UPPER(#bbs_title#) ||'%'
        </isNotNull>
        
        <isNotNull prepend="and" property="create_us_nm">
          UPPER(B.us_nm) LIKE '%'|| UPPER(#create_us_nm#) ||'%'
        </isNotNull>
        
        <isNotNull prepend="and" property="bbs_category">
          UPPER(A.bbs_category) LIKE '%'|| UPPER(#bbs_category#) ||'%'
        </isNotNull>
        
      </dynamic>
      order by bbs_idx asc;
    </select>
    
    <!--댓글 :  상세보기에서만 -->
    <insert id="insBbsReply" resultClass="bbsReply">
      <selectKey type="pre" resultClass="int" Property="bbs_reply_idx">
        SELECT COALESCE(MAX(bbs_reply_idx) + 1, 1) AS bbs_reply_idx FROM Bbs_reply
      </selectKey>
      INSERT INTO Bbs_reply (bbs_reply_idx, parent_reply_idx, bbs_idx, bbs_reply_content, create_dt, create_us)
      VALUES (#bbs_reply_idx#, #parent_reply_idx#, #bbs_idx#, #bbs_reply_content#, now(), #create_us#)
    </insert>

    <select id="selBbsReply"  parameterClass="bbsReply" resultClass="bbsReply">
      SELECT A.*, B.us_nm as create_us_nm, B.us_role
      FROM Bbs_reply A
      LEFT JOIN sys_users B ON A.create_us = B.us_idx
      <dynamic prepend="where">
        <isNotNull prepend ="and" property="bbs_idx">
          A.bbs_idx = #bbs_idx#
        </isNotNull>
        <isNotNull property="create_us_nm">
          AND B.us_nm  LIKE '%'|| UPPER(#create_us_nm#) ||'%'
        </isNotNull>
      </dynamic>
      order by bbs_reply_idx ASC;
    </select>
    
    <delete id="delBbsReply" parameterClass="bbsReply">
      DELETE  FROM Bbs_reply where bbs_reply_idx = #bbs_reply_idx#
    </delete>
    <!--<dynamic prepend="where">-->
      <isNotNull prepend="and" property ="bbs_idx">
        bbs_idx = #bbs_idx#
      </isNotNull>
    <!--</dynamic>-->
    <update id ="udtBbsReply" resultClass="bbsReply">
      update Bbs_reply set bbs_reply_content = #bbs_reply_content#, use_fl = #use_fl#
      where bbs_reply_idx = #bbs_reply_idx#
    </update>
    
    <!--파일 -->
    <select id="selBbsFile" parameterClass="bbsFile" resultClass="bbsFile">
      SELECT A.*, B.bbs_title, C.us_nm
      FROM bbs_file A
      LEFT JOIN bbs_contents B on B.bbs_idx = A.bbs_idx
      LEFT JOIN sys_users C on B.create_us = C.us_idx
      <dynamic prepend="where">
        <isNotNull prepend="and" property ="bbs_idx">
          A.bbs_idx = #bbs_idx#
        </isNotNull>
        <isNotNull prepend="and" property ="bbs_file_idx">
          A.bbs_file_idx = #bbs_file_idx#
        </isNotNull>
     </dynamic>
      order by bbs_file_idx desc;
    </select>
      
    <insert id="insBbsFile" resultClass="bbsFile">
      <selectKey type="pre" resultClass="int" Property="bbs_file_idx">
        SELECT COALESCE(MAX(bbs_file_idx)+1 , 1) AS bbs_file_idx FROM Bbs_file
      </selectKey>
      INSERT INTO Bbs_file (bbs_file_Idx, bbs_idx, file_org_nm, file_conv_nm)
      VALUES(#bbs_file_idx#, #bbs_idx#, #file_org_nm#, #file_conv_nm#)
    </insert>
  
    <delete id="delBbsFile" parameterClass="bbsFile">
      DELETE  FROM Bbs_file where bbs_file_idx = #bbs_file_idx#
    </delete>
    <!--<dynamic prepend="where">-->
      <isNotNull prepend="and" property ="bbs_idx">
        bbs_idx = #bbs_idx#
      </isNotNull>
    <!--</dynamic>-->
  </statements>
</sqlMap>
  
